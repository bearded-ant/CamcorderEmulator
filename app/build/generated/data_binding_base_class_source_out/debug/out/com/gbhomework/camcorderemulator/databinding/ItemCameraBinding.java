// Generated by view binder compiler. Do not edit!
package com.gbhomework.camcorderemulator.databinding;

import android.view.LayoutInflater;
import android.view.SurfaceView;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.gbhomework.camcorderemulator.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCameraBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ConstraintLayout CameraContainer;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final MaterialCardView itemCameraCard;

  @NonNull
  public final SurfaceView surfaceView;

  private ItemCameraBinding(@NonNull MaterialCardView rootView,
      @NonNull ConstraintLayout CameraContainer, @NonNull ImageView imageView,
      @NonNull MaterialCardView itemCameraCard, @NonNull SurfaceView surfaceView) {
    this.rootView = rootView;
    this.CameraContainer = CameraContainer;
    this.imageView = imageView;
    this.itemCameraCard = itemCameraCard;
    this.surfaceView = surfaceView;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCameraBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCameraBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_camera, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCameraBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CameraContainer;
      ConstraintLayout CameraContainer = ViewBindings.findChildViewById(rootView, id);
      if (CameraContainer == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      MaterialCardView itemCameraCard = (MaterialCardView) rootView;

      id = R.id.surfaceView;
      SurfaceView surfaceView = ViewBindings.findChildViewById(rootView, id);
      if (surfaceView == null) {
        break missingId;
      }

      return new ItemCameraBinding((MaterialCardView) rootView, CameraContainer, imageView,
          itemCameraCard, surfaceView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
